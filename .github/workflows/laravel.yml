name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  static-analysis:
    name: PHPStan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP with composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          tools: cs2pr
          coverage: none

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install composer dependencies
        run: composer create-project --no-progress --prefer-dist

      - name: Run PHPStan
        run: >
          vendor/bin/phpstan analyse -c phpstan.neon
            --no-progress --error-format=checkstyle | cs2pr

  tests:
    name: Tests (PHP ${{ matrix.php-versions }})
    runs-on: ${{ matrix.operating-system }}

    env:
      php-extensions: pgsql, redis
      php-extensions-key: cache-v1 # change to clear the extension cache.
      REDIS_HOST: redis
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      DB_CONNECTION: pgsql
      DB_HOST: pgsql
      DB_PASSWORD: postgres
      DB_USERNAME: postgres
      DB_DATABASE: postgres

    services:
      pgsql:
        image: postgres:alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp
        options: >
          --health-cmd "pg_isready" --health-interval 10s
          --health-timeout 5s --health-retries 3
      redis:
        image: redis:alpine
        ports:
          - 6379/tcp
        options: >
          --health-cmd="redis-cli ping" --health-interval 10s
          --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        operating-system: [ 'ubuntu-latest' ]
        php-versions: [ '7.4', '8.0' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP extensions cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.php-extensions }}
          key: ${{ env.php-extensions-key }}

      - name: Cache PHP extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.php-extensions }}
          tools: cs2pr
          coverage: xdebug

      - name: Setup problem matchers for PHP and PHPUnit
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install composer dependencies
        run: composer create-project --no-progress --prefer-dist

      - name: Run migrations
        run: php artisan migrate -v --seed
        env:
          DB_PORT: ${{ job.services.pgsql.ports[5432] }}
          REDIS_PORT: ${{ job.services.redis.ports[6379] }}

      - name: Test with PHPUnit
        run: php artisan test --without-tty --parallel --coverage-text
        env:
          DB_PORT: ${{ job.services.pgsql.ports[5432] }}
          REDIS_PORT: ${{ job.services.redis.ports[6379] }}
